{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/forms\";\nimport * as i2 from \"src/app/services/services.service\";\nimport * as i3 from \"@angular/material/dialog\";\nimport * as i4 from \"@angular/material/button\";\nimport * as i5 from \"@angular/material/input\";\nimport * as i6 from \"@angular/material/form-field\";\nexport class CreateComponent {\n  constructor(fb, service, dialogRef) {\n    this.fb = fb;\n    this.service = service;\n    this.dialogRef = dialogRef;\n  }\n  ngOnInit() {}\n}\nCreateComponent.ɵfac = function CreateComponent_Factory(t) {\n  return new (t || CreateComponent)(i0.ɵɵdirectiveInject(i1.FormBuilder), i0.ɵɵdirectiveInject(i2.ServicesService), i0.ɵɵdirectiveInject(i3.MatDialogRef));\n};\nCreateComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: CreateComponent,\n  selectors: [[\"app-create\"]],\n  decls: 19,\n  vars: 2,\n  consts: [[\"mat-Dialog-Title\", \"\", 2, \"margin\", \"10px\"], [\"mat-dialog-content\", \"\"], [3, \"formGroup\"], [\"appearance\", \"outline\"], [\"formControlName\", \"idPersona\", \"matInput\", \"\", \"placeholder\", \"Identificacion\"], [\"formControlName\", \"nombres\", \"matInput\", \"\", \"placeholder\", \"Nombre\"], [\"formControlName\", \"apellidos\", \"matInput\", \"\", \"placeholder\", \"Apellidos\"], [\"mat-dialog-actions\", \"\", 3, \"align\"], [\"mat-raised-button\", \"\", \"color\", \"warn\", \"mat-dialog-close\", \"\"]],\n  template: function CreateComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"h1\", 0);\n      i0.ɵɵtext(1, \"Agregar Nueva Persona\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(2, \"div\", 1)(3, \"form\", 2)(4, \"mat-form-field\", 3)(5, \"mat-label\");\n      i0.ɵɵtext(6, \"Identificacion\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelement(7, \"input\", 4);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(8, \"mat-form-field\", 3)(9, \"mat-label\");\n      i0.ɵɵtext(10, \"Nombres\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelement(11, \"input\", 5);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(12, \"mat-form-field\", 3)(13, \"mat-label\");\n      i0.ɵɵtext(14, \"Apellidos\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelement(15, \"input\", 6);\n      i0.ɵɵelementEnd()()();\n      i0.ɵɵelementStart(16, \"div\", 7)(17, \"button\", 8);\n      i0.ɵɵtext(18, \"Cerrar\");\n      i0.ɵɵelementEnd()();\n    }\n    if (rf & 2) {\n      i0.ɵɵadvance(3);\n      i0.ɵɵproperty(\"formGroup\", ctx.validateForm);\n      i0.ɵɵadvance(13);\n      i0.ɵɵproperty(\"align\", \"end\");\n    }\n  },\n  dependencies: [i4.MatButton, i3.MatDialogClose, i3.MatDialogContent, i3.MatDialogActions, i1.ɵNgNoValidate, i1.DefaultValueAccessor, i1.NgControlStatus, i1.NgControlStatusGroup, i1.FormGroupDirective, i1.FormControlName, i5.MatInput, i6.MatFormField, i6.MatLabel],\n  styles: [\"mat-form-field[_ngcontent-%COMP%]{\\r\\n    width: 100%;\\r\\n}\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8uL3NyYy9hcHAvY29tcG9uZW50cy9jcmVhdGUvY3JlYXRlLmNvbXBvbmVudC5jc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7SUFDSSxXQUFXO0FBQ2YiLCJzb3VyY2VzQ29udGVudCI6WyJtYXQtZm9ybS1maWVsZHtcclxuICAgIHdpZHRoOiAxMDAlO1xyXG59Il0sInNvdXJjZVJvb3QiOiIifQ== */\"]\n});","map":{"version":3,"mappings":";;;;;;;AAUA,OAAM,MAAOA,eAAe;EAI1BC,YAAoBC,EAAe,EACzBC,OAAwB,EACxBC,SAAwC;IAF9B,OAAE,GAAFF,EAAE;IACZ,YAAO,GAAPC,OAAO;IACP,cAAS,GAATC,SAAS;EAAmC;EAItDC,QAAQ,IAER;;AAZWL,eAAe;mBAAfA,eAAe;AAAA;AAAfA,eAAe;QAAfA,eAAe;EAAAM;EAAAC;EAAAC;EAAAC;EAAAC;IAAA;MCV5BC,6BAA2C;MAAAA,qCAAqB;MAAAA,iBAAK;MAErEA,8BAAwB;MAGLA,8BAAc;MAAAA,iBAAY;MACrCA,2BAAyE;MAC3EA,iBAAiB;MAEjBA,yCAAqC;MACxBA,wBAAO;MAAAA,iBAAY;MAC9BA,4BAA+D;MACjEA,iBAAiB;MAEjBA,0CAAqC;MACvBA,0BAAS;MAAAA,iBAAY;MACjCA,4BAAoE;MACtEA,iBAAiB;MAGvBA,+BAAwC;MACoBA,uBAAM;MAAAA,iBAAS;;;MAlBpEA,eAA2B;MAA3BA,4CAA2B;MAiBVA,gBAAe;MAAfA,6BAAe","names":["CreateComponent","constructor","fb","service","dialogRef","ngOnInit","selectors","decls","vars","consts","template","i0"],"sourceRoot":"","sources":["C:\\Users\\Alex\\Desktop\\sofka\\sofka-frontend\\src\\app\\components\\create\\create.component.ts","C:\\Users\\Alex\\Desktop\\sofka\\sofka-frontend\\src\\app\\components\\create\\create.component.html"],"sourcesContent":["import { Component, OnInit } from '@angular/core';\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\nimport { ServicesService } from 'src/app/services/services.service';\nimport { MatDialogRef, MAT_DIALOG_DATA } from '@angular/material/dialog';\n\n@Component({\n  selector: 'app-create',\n  templateUrl: './create.component.html',\n  styleUrls: ['./create.component.css']\n})\nexport class CreateComponent implements OnInit {\n\n  \n\n  constructor(private fb: FormBuilder,\n    private service: ServicesService,\n    private dialogRef: MatDialogRef<CreateComponent>) { }\n\n  validateForm!: FormGroup;\n\n  ngOnInit(): void {\n    \n  }\n\n}\n","<h1 mat-Dialog-Title style=\"margin: 10px;\">Agregar Nueva Persona</h1>\n\n<div mat-dialog-content>\n <form [formGroup]= \"validateForm\">\n      <mat-form-field appearance=\"outline\">\n        <mat-label>Identificacion</mat-label>\n        <input formControlName=\"idPersona\" matInput placeholder=\"Identificacion\">\n      </mat-form-field>\n\n      <mat-form-field appearance=\"outline\">\n        <mat-label>Nombres</mat-label>\n        <input formControlName=\"nombres\" matInput placeholder=\"Nombre\">\n      </mat-form-field>\n      \n      <mat-form-field appearance=\"outline\">\n        <mat-label >Apellidos</mat-label>\n        <input formControlName=\"apellidos\" matInput placeholder=\"Apellidos\">\n      </mat-form-field>\n </form>\n</div>\n<div mat-dialog-actions [align]=\"'end'\">\n    <button mat-raised-button color=\"warn\" mat-dialog-close>Cerrar</button>\n\n</div>"]},"metadata":{},"sourceType":"module","externalDependencies":[]}